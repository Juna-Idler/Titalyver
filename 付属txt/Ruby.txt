タイムタグ付き歌詞テキストでのルビ表示フォーマット


二通りの手段で歌詞へのルビ付けを行えます

どちらも@タグを利用。
だいぶ廃れている気がするけど、せっかくだから記号として@を利用


■@Rubyタグによる指定

@Ruby=[青春][ブルー]

見たまんまです。
「Ruby」部分は大文字小文字を区別しません。
[]の部分をさらに@タグで指定できるようにしようかとも思いましたが、
とりあえず固定で。


モノルビにもパラメーターを用いて対応出来ます。

@Ruby=[青春]0,1[せい]
@Ruby=[青春]1,1[しゅん]

コンマ区切りで、
最初の数字が親文字オフセットで、後の数字が長さです。
１行目[青春]の0(+1)文字目から1文字に[せい]
２行目[青春]の1(+1)文字目から1文字に[しゅん]
という指定になります。
ただこの場合、2文字に2+3文字のルビなので、場合によってルビが重なる可能性があります。


上記の「ブルー」と「せいしゅん」は同じ「青春」を対象としているため、同時には使用できません。
先に定義した方が有効となります。
これを回避するためには、前後の文脈もまとめて指定してパラメーターで限定するか、
もしくは、もう一つのルビ付け方法、歌詞内での直接指定を用いれば可能です。

@Ruby=[未来のこと]0,2[さき]
@Ruby=[未来][みらい]

先により長い、限定された方を指定しないといけません。


@タグの歌詞内での位置は問いません。
ファイルの先頭でも、最後でも、タイムタグ行に挟まれた行でも。
ただし@Rubyの位置関係によって検索順位が変わる点だけ注意。（上の行ほど先に検索）



■@Ruby_タグによる歌詞内での直接指定

まず最初に@タグで「ルビ指定記号」を設定します。例えば

@ruby_parent=|
@ruby_begin=(
@ruby_end=)

とすると、

|青春(ブルー)

と書かれている歌詞が、

[青春][ブルー]

として読み込まれます。ただしその場限りのルビ指定です。
@Rubyで同じ文字があっても、こちらの指定が優先されます。

各@ruby_の後の"="の後には指定記号だけを記述します。終端の改行以外は空白も入れられません。
記号と書いていますが、文字列で判定するため、=の後から改行までの文字列が指定記号になります。

実装依存になる可能性もありますが、基本的に@Ruby_指定は一つの指定で全文を走査します。
歌詞の途中で指定を変更して、記号を使い分ける。ということは出来ません。
最後の指定で変換します。


この方式による良さそうな例を一つ

@Ruby_Parent= 
@Ruby_Begin=（
@Ruby_End=）

 青春（ブルー）

とすれば、ルビ非対応でも括弧によるふりがなとして見えます。
この状態で半角空白を使った行で括弧を使いたい場合は、
括弧の前に半角空白を置くことで、親文字が0文字なので、ルビ指定とは判断されません。




■[テスト]ルビタイムタグと@Rubyedタグ
（現在.krrという拡張子でのみ機能します）

ルビにタイムタグを乗せる方法として、こう書くことが出来ます
[00:00.00]|仮(か)[00:01.00]|名(な)|文字[00:02.00](も[00:03.00]じ)[00:04.00]
@Ruby_Parent=|
@Ruby_Begin=(
@Ruby_End=)

内部的には、親文字（とルビ指定記号）を取り除いた
[00:00.00]か[00:01.00]な[00:02.00]も[00:03.00]じ[00:04.00]
と、タイムタグを取り除いた
|仮(か)|名(な)|文字(もじ)
という２つに分解し処理されます

その分解を事前にしておくのが@Rubyedであり
[00:00.00]か[00:01.00]な[00:02.00]も[00:03.00]じ[00:04.00]
と読みだけのタイムタグを書いておき
@Rubyed=|仮(か)|名(な)|文字(もじ)
と指定をすることでルビタイムタグとすることが出来ます

@Rubyedは上から順に、最初のタイムタグ行から比較され、親文字を除いたものと完全一致すればその行と結びつく。
その後、次の@Rubyed行が次のタイムタグ行と比較される。
@Rubyedはルビを含まなくても構わない。
タイムタグ行と一致しない行が含まれていると、そこでタイムタグ行の比較が最後まで終了し、以降の@Rubyedは無効となる。

親文字のタイムタグは、対応ルビの最初と最後の時間のみ適応される
上の例ではこうなる
[00:00.00]仮[00:01.00]名[00:02.00]文字[00:04.00]



■複数行タグ

@Multiline_XXX=
一行目
二行目
@
と書くことで
@XXX=一行目
@XXX=二行目
と同じ意味になる

空行も有効
行頭「@」で終端を表す。それは次の@タグでも構わない




◆戯言

なんか
http://hp.vector.co.jp/authors/VA023256/TimeTagDev.html#3-2-2
このへんで同じ名前を使うなとか言ってるけど、
特にその禁止理由も書いてないので、無視。
そもそもこれにちゃんと準拠してるのってどれだけあるんだ？
あと古い。WinAmp時間とかもうどうでもいいだろ。

http://www2u.biglobe.ne.jp/~shinta/be/Main.htm?_BL_FE_RubyTag.htm
実装がＢeＯＳにしかないとかやる気なさ過ぎだろ。
さらに↑の@タグ規格に従って同名禁止を連番で回避とか、一個や二個ならいいかもしれんが、
総ルビとかしようとしたら、ルビ付けに無用な負担を課すだけ。
誰も幸せになれない仕様なんざ捨てちまえ。
まあでも多少は参考にした。

ルビへのタイムタグは、もう実装がいろいろとめんどくさそうなのでとりあえず無視。
やるにしても
@KaraokeRuby
とか別に作った方が管理や対応が楽そう。



